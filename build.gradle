import com.datastax.oss.driver.api.core.CqlSession

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.datastax.oss:java-driver-core:4.17.0"
    }
}

plugins {
    id "org.embulk.embulk-plugins" version "0.7.0"
    id "maven-publish"
    id "java"
    id "signing"
    id "checkstyle"
}

repositories {
    mavenCentral()
}

group = "org.embulk.output.cassandra"
version = "0.5.0"
description = "Cassandra output plugin for Embulk"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }

    withJavadocJar()
    withSourcesJar()
}

embulkPlugin {
    mainClass = "org.embulk.output.cassandra.CassandraOutputPlugin"
    category = "output"
    type = "cassandra"
}

dependencies {
    compileOnly "org.embulk:embulk-spi:0.11"
    implementation("com.datastax.oss:java-driver-core:4.17.0")
    implementation("com.datastax.oss:java-driver-query-builder:4.17.0")

    implementation("org.embulk:embulk-util-config:0.5.0")

    testImplementation "junit:junit:4.+"
    testImplementation "org.embulk:embulk-spi:0.11"
    testImplementation "org.embulk:embulk-core:0.11.3"
    testImplementation "org.embulk:embulk-junit4:0.11.3"
    testImplementation "org.embulk:embulk-input-file:0.11.0"
    testImplementation "org.embulk:embulk-parser-csv:0.11.0"
    testImplementation "org.embulk:embulk-deps:0.11.3"


    testImplementation "org.testcontainers:testcontainers:1.19.7"
    testImplementation "org.testcontainers:cassandra:1.19.7"
}

test {
    minHeapSize = "512m"
    maxHeapSize = "4g"
}

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}
checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}

gem {
    from("LICENSE.txt")
    authors = [ "joker1007" ]
    email = [ "kakyoin.hierophant@gmail.com" ]
    description = "Cassandra output plugin for Embulk"
    summary = "Cassandra output plugin for Embulk"
    homepage = "https://github.com/joker1007/embulk-output-cassandra"
    licenses = [ "MIT" ]
}

gemPush {
    host = "https://rubygems.org"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.name

            // Publish it with "publishEmbulkPluginMavenPublicationToMavenRepository".
            from components.java  // Must be "components.java". The dependency modification works only for it.
            pom {
                name = "embulk-output-cassandra"
                packaging = "jar"
                description = "Embulk output plugin for Cassandra"
                url = "https://github.com/joker1007/embulk-output-cassandra"

                licenses {
                    license {
                        // http://central.sonatype.org/pages/requirements.html#license-information
                        name = "MIT License"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }

                scm {
                    connection = "scm:git://github.com/joker1007/embulk-output-cassandra.git"
                    developerConnection = "scm:git@github.com:joker1007/embulk-output-cassandra.git"
                    url = "https://github.com/joker1007/embulk-output-cassandra"
                }

                developers {
                    developer {
                        id = "joker1007"
                        name = "Tomohiro Hashidate"
                        email = "kakyoin.hierophant@gmail.com"
                    }
                }
            }
        }
    }
    repositories {
        maven {  // publishMavenPublicationToMavenCentralRepository
            name = "mavenCentral"
            if (project.version.endsWith("-SNAPSHOT")) {
                url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }

            credentials {
                username = project.hasProperty("ossrhUsername") ? ossrhUsername : ""
                password = project.hasProperty("ossrhPassword") ? ossrhPassword : ""
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.maven
}

tasks.withType(Sign) {
    onlyIf { System.getenv().get("SKIP_SIGNING") == null }
}

task generateEmbulkProperties {
    doLast {
        mkdir ".embulk"
        def f = file(".embulk/embulk.properties")
        f.write("m2_repo=${System.properties["user.home"]}/.m2/repository\nplugins.output.cassandra=maven:${project.group}:cassandra:${project.version}")
    }
}

task createTestTable {
    doLast {
        def session = CqlSession.builder()
                .addContactPoint(new InetSocketAddress("localhost", 9042))
                .withLocalDatacenter("datacenter1")
                .build()

        def keyspaceCql = new File(sourceSets.test.resources.srcDirs[0], "org/embulk/output/cassandra/create_keyspace.cql").text
        def tableCql = new File(sourceSets.test.resources.srcDirs[0], "org/embulk/output/cassandra/create_table_test_basic.cql").text
        session.execute(keyspaceCql)
        session.execute(tableCql)
    }
}
